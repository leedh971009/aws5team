{{- range .Values.name }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tomcat-{{ . }}
  namespace: {{ $.Values.namespace }}
  annotations:
    kubernetes.io/change-cause: first_version
spec:
  replicas: {{ $.Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ $.Values.app }}
      name: {{ . }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: {{ $.Values.app }}
        name: {{ . }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: nginx
                  operator: In
                  values:
                  - nginx
              topologyKey: topology.kubernetes.io/zone
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: {{ $.Values.app }}
      containers:
        - image: {{ .Values.images.tomcat.login.repository }}:{{ .Values.images.tomcat.login.tag }}
          name: login
          imagePullPolicy: {{ .Values.images.tomcat.login.pullPolicy }}
          ports:
        - containerPort: 8080

        - image: {{ .Values.images.nginx.tomcat.repository }}:{{ .Values.images.tomcat.index.tag }}
          name: index
          imagePullPolicy: {{ .Values.images.tomcat.index.pullPolicy }}
          ports:
          - containerPort: 8080

        - image: {{ .Values.images.tomcat.join.repository }}:{{ .Values.images.tomcat.join.tag }}
          name: join
          imagePullPolicy: {{ .Values.images.tomcat.join.pullPolicy }}
          ports:
          - containerPort: 8080

        - image: {{ .Values.images.tomcat.contents.repository }}:{{ .Values.images.tomcat.contents.tag }}
          name: contents
          imagePullPolicy: {{ .Values.images.tomcat.contents.pullPolicy }}
          ports:
          - containerPort: 8080

        - image: {{ .Values.images.tomcat.mypage.repository }}:{{ .Values.images.tomcat.mypage.tag }}
          name: mypage
          imagePullPolicy: {{ .Values.images.tomcat.mypage.pullPolicy }}
          ports:
          - containerPort: 8080
          volumeMounts:
          - mountPath: "/opt/tomcat/webapps/ROOT/data"
            name: html
          resources:
            limits:
              cpu: {{ $.Values.resources.limits.cpu }}
              memory: {{ $.Values.resources.limits.memory }}
            requests:
              cpu: {{ $.Values.resources.requests.cpu }}
              memory: {{ $.Values.resources.requests.memory }}
          livenessProbe:
            httpGet:
              path: {{ .livenessProbe.path }}
              port: {{ .livenessProbe.port }}
            initialDelaySeconds: {{ $.Values.probeSettings.initialDelaySeconds }}
            periodSeconds: {{ $.Values.probeSettings.periodSeconds }}
            timeoutSeconds: {{ $.Values.probeSettings.timeoutSeconds }}
            successThreshold: {{ $.Values.probeSettings.successThreshold }}
            failureThreshold: {{ $.Values.probeSettings.failureThreshold }}
      volumes:
        - name: html
          persistentVolumeClaim:
            claimName: {{ $.Values.pvcName }}
{{- end }}

