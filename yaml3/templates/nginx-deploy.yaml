{{- range .Values.names }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-{{ .Values.name }}
  namespace: {{ .Values.namespace }}
  annotations:
    kubernetes.io/change-cause: first_version
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.app }}
      name: {{ .Values.name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: {{ .Values.app }}
        name: {{ .Values.name }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: nginx
                  operator: In
                  values:
                  - nginx
              topologyKey: topology.kubernetes.io/zone
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: {{ .Values.app }}
      containers:
      - image: {{ .Values.images.nginx.login.repository }}:{{ .Values.images.nginx.login.tag }}
        name: login
        imagePullPolicy: {{ .Values.images.nginx.login.pullPolicy }}
        ports:
        - containerPort: 80

      - image: {{ .Values.images.nginx.index.repository }}:{{ .Values.images.nginx.index.tag }}
        name: index
        imagePullPolicy: {{ .Values.images.nginx.index.pullPolicy }}
        ports:
        - containerPort: 80

      - image: {{ .Values.images.nginx.join.repository }}:{{ .Values.images.nginx.join.tag }}
        name: join
        imagePullPolicy: {{ .Values.images.nginx.join.pullPolicy }}
        ports:
        - containerPort: 80

      - image: {{ .Values.images.nginx.contents.repository }}:{{ .Values.images.nginx.contents.tag }}
        name: contents
        imagePullPolicy: {{ .Values.images.nginx.contents.pullPolicy }}
        ports:
        - containerPort: 80

      - image: {{ .Values.images.nginx.mypage.repository }}:{{ .Values.images.nginx.mypage.tag }}
        name: mypage
        imagePullPolicy: {{ .Values.images.nginx.mypage.pullPolicy }}
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: "/usr/share/nginx/html/data"
          name: html
        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
        livenessProbe:
          httpGet:
            path: {{ .Values.livenessProbe.path }}
            port: {{ .Values.livenessProbe.port }}
          initialDelaySeconds: {{ .Values.probeSettings.initialDelaySeconds }}
          periodSeconds: {{ .Values.probeSettings.periodSeconds }}
          timeoutSeconds: {{ .Values.probeSettings.timeoutSeconds }}
          successThreshold: {{ .Values.probeSettings.successThreshold }}
          failureThreshold: {{ .Values.probeSettings.failureThreshold }}
        imagePullPolicy: {{ .Values.images.pullPolicy }}
      volumes:
        - name: html
          persistentVolumeClaim:
            claimName: {{ .Values.pvcName }}
{{- end }}
